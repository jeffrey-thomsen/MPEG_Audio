import numpy

"""
Tables D.2a to D.2f from the MPEG-1 Audio standard

D2a - LayerI@32kHz
D2b - LayerI@44.1kHz
D2c - LayerI@48kHz
D2d - LayerI@32kHz
D2e - LayerI@44.1kHz
D2f - LayerI@48kHz
"""
# Table D.2a. -- Critical band boundaries
# This table is valid for Layer I at a sampling rate of 32 kHz.
# The frequencies represent the top end of each critical band.

# LayerI@32kHz
# No - Index of Table FC&B - Frequency (Hz) - Bark (z)

D2a = numpy.array([[0, 1, 62.500, 0.617],
[1, 3, 187.500, 1.842],
[2, 5, 312.500, 3.037],
[3, 7, 437.500, 4.185],
[4, 9, 562.500, 5.272],
[5, 11, 687.500, 6.289],
[6, 13, 812.500, 7.233],
[7, 15, 937.500, 8.103],
[8, 18, 1125.000, 9.275],
[9, 21, 1312.500, 10.301],
[10, 24, 1500.000, 11.199],
[11, 27, 1687.500, 11.988],
[12, 32, 2000.000, 13.104],
[13, 37, 2312.500, 14.027],
[14, 44, 2750.000, 15.087],
[15, 50, 3250.000, 16.069],
[16, 55, 3875.000, 17.078],
[17, 61, 4625.000, 18.089],
[18, 68, 5500.000, 19.095],
[19, 74, 6500.000, 20.079],
[20, 79, 7750.000, 21.098],
[21, 85, 9250.000, 22.046],
[22, 94, 11500.000, 23.030],
[23, 108, 15000.000, 23.923]])

# Table D.2b. -- Critical band boundaries
# This table is valid for Layer I at a sampling rate of 44,1 kHz.
# The frequencies represent the top end of each critical band.

# LayerI@44.1kHz
# No - Index of Table FC&B - Frequency (Hz) - Bark (z)

D2b = numpy.array([[0, 1, 86.133, 0.850],
[1, 2, 172.266, 1.694],
[2, 3, 258.398, 2.525],
[3, 5, 430.664, 4.124],
[4, 6, 516.797, 4.882],
[5, 8, 689.063, 6.301],
[6, 9, 775.195, 6.959],
[7, 11, 947.461, 8.169],
[8, 13, 1119.727, 9.244],
[9, 15, 1291.992, 10.195],
[10, 17, 1464.258, 11.037],
[11, 20, 1722.656, 12.125],
[12, 23, 1981.055, 13.042],
[13, 27, 2325.586, 14.062],
[14, 32, 2756.250, 15.100],
[15, 37, 3186.914, 15.955],
[16, 45, 3875.977, 17.079],
[17, 50, 4478.906, 17.904],
[18, 55, 5340.234, 18.922],
[19, 61, 6373.828, 19.963],
[20, 68, 7579.688, 20.971],
[21, 75, 9302.344, 22.074],
[22, 81, 11369.531, 22.984],
[23, 93, 15503.906, 24.013],
[24, 106, 19982.813, 24.573]])

# Table D.2c. -- Critical band boundaries
# This table is valid for Layer I at a sampling rate of 48 kHz.
# The frequencies represent the top end of each critical band.

# LayerI@48kHz
# No - Index of Table FC&B - Frequency (Hz) - Bark (z)

D2c = numpy.array([[0, 1, 93.750, 0.925],
[1, 2, 187.500, 1.842],
[2, 3, 281.250, 2.742],
[3, 4, 375.000, 3.618],
[4, 5, 468.750, 4.463],
[5, 6, 562.500, 5.272],
[6, 7, 656.250, 6.041],
[7, 9, 843.750, 7.457],
[8, 10, 937.500, 8.103],
[9, 12, 1125.000, 9.275],
[10, 14, 1312.500, 10.301],
[11, 16, 1500.000, 11.199],
[12, 19, 1781.250, 12.347],
[13, 21, 1968.750, 13.002],
[14, 25, 2343.750, 14.111],
[15, 29, 2718.750, 15.018],
[16, 35, 3281.250, 16.124],
[17, 41, 3843.750, 17.032],
[18, 49, 4687.500, 18.166],
[19, 53, 5437.500, 19.028],
[20, 58, 6375.000, 19.964],
[21, 65, 7687.500, 21.052],
[22, 73, 9375.000, 22.113],
[23, 79, 11625.000, 23.072],
[24, 89, 15375.000, 23.991],
[25, 102, 20250.000, 24.597]])

# Table D.2d. -- Critical band boundaries
# This table is valid for Layer II at a sampling rate of 32 kHz.
# The frequencies represent the top end of each critical band.

# LayerII@32kHz
# No - Index of Table FC&B - Frequency (Hz) - Bark (z)

D2d = numpy.array([[0, 1, 31.250, 0.309],
[1, 3, 93.750, 0.925],
[2, 6, 187.500, 1.842],
[3, 10, 312.500, 3.037],
[4, 13, 406.250, 3.903],
[5, 17, 531.250, 5.006],
[6, 21, 656.250, 6.041],
[7, 25, 781.250, 7.004],
[8, 30, 937.500, 8.103],
[9, 35, 1093.750, 9.090],
[10, 41, 1281.250, 10.139],
[11, 47, 1468.750, 11.058],
[12, 51, 1687.500, 11.988],
[13, 56, 2000.000, 13.104],
[14, 61, 2312.500, 14.027],
[15, 68, 2750.000, 15.087],
[16, 74, 3250.000, 16.069],
[17, 79, 3875.000, 17.078],
[18, 85, 4625.000, 18.089],
[19, 92, 5500.000, 19.095],
[20, 98, 6500.000, 20.079],
[21, 103, 7750.000, 21.098],
[22, 109, 9250.000, 22.046],
[23, 118, 11500.000, 23.030],
[24, 132, 15000.000, 23.923]])

# Table D.2e. -- Critical band boundaries
# This table is valid for Layer II at a sampling rate of 44,1 kHz.
# The frequencies represent the top end of each critical band.

# LayerII@44.1kHz
# No - Index of Table FC&B - Frequency (Hz) - Bark (z)

D2e = numpy.array([[0, 1, 43.066, 0.425],
[1, 2, 86.133, 0.850],
[2, 3, 129.199, 1.273],
[3, 5, 215.332, 2.112],
[4, 7, 301.465, 2.934],
[5, 10, 430.664, 4.124],
[6, 13, 559.863, 5.249],
[7, 16, 689.063, 6.301],
[8, 19, 818.262, 7.274],
[9, 22, 947.461, 8.169],
[10, 26, 1119.727, 9.244],
[11, 30, 1291.992, 10.195],
[12, 35, 1507.324, 11.232],
[13, 40, 1722.656, 12.125],
[14, 46, 1981.055, 13.042],
[15, 51, 2325.586, 14.062],
[16, 56, 2756.250, 15.100],
[17, 62, 3273.047, 16.11],
[18, 69, 3875.977, 17.079],
[19, 74, 4478.906, 17.904],
[20, 79, 5340.234, 18.922],
[21, 85, 6373.828, 19.963],
[22, 92, 7579.688, 20.971],
[23, 99, 9302.344, 22.074],
[24, 105, 11369.531, 22.984],
[25, 117, 15503.906, 24.013],
[26, 130, 19982.813, 24.573]])

# Table D.2f. -- Critical band boundaries
# This table is valid for Layer II at a sampling rate of 48 kHz.
# The frequencies represent the top end of each critical band.

# LayerII@48kHz
# No - Index of Table FC&B - Frequency (Hz) - Bark (z)

D2f = numpy.array([[0, 1, 46.875, 0.463],
[1, 2, 93.750, 0.925],
[2, 3, 140.625, 1.385],
[3, 5, 234.375, 2.295],
[4, 7, 328.125, 3.184],
[5, 9, 421.875, 4.045],
[6, 12, 562.500, 5.272],
[7, 14, 656.250, 6.041],
[8, 17, 796.875, 7.119],
[9, 20, 937.500, 8.103],
[10, 24, 1125.000, 9.275],
[11, 27, 1265.625, 10.057],
[12, 32, 1500.000, 11.199],
[13, 37, 1734.375, 12.170],
[14, 42, 1968.750, 13.002],
[15, 49, 2343.750, 14.111],
[16, 53, 2718.750, 15.018],
[17, 59, 3281.250, 16.124],
[18, 65, 3843.750, 17.032],
[19, 73, 4687.500, 18.166],
[20, 77, 5437.500, 19.028],
[21, 82, 6375.000, 19.964],
[22, 89, 7687.500, 21.052],
[23, 97, 9375.000, 22.113],
[24, 103, 11625.000, 23.072],
[25, 113, 15375.000, 23.991],
[26, 126, 20250.000, 24.597]])